name: ubuntu-intelLLVM

env:
  LINUX_CPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-compiler-fortran intel-oneapi-mpi-2021.3.0 intel-oneapi-mpi-devel-2021.3.0
# https://github.com/oneapi-src/oneapi-ci/blob/master/.github/workflows/build_all.yml

on:
  push:
    branches:
      - dev
      
  pull_request:
    branches:
      - main
      - dev 

jobs:

  builds-and-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        optimization-type: ["Debug", "Release"]
        mpi-build: ["No", "Yes"]

    steps:

    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: cache install oneAPI
      id: cache-install
      uses: actions/cache@v3
      with:
        path: |
          /opt/intel/oneapi
        key: install-apt

    - name: non-cache install oneAPI
      if: steps.cache-install.outputs.cache-hit != 'true'
      timeout-minutes: 10
      run: |
        sh -c .github/workflows/oneapi_setup_apt_repo_linux.sh
        sudo apt install ${{ env.LINUX_CPP_COMPONENTS }} ${{ env.LINUX_FORTRAN_COMPONENTS }}

    - name: Setup Intel oneAPI environment
      run: |
        LATEST_VERSION=$(ls -1 /opt/intel/oneapi/compiler/ | grep -v latest | sort | tail -1)
        source /opt/intel/oneapi/compiler/"$LATEST_VERSION"/env/vars.sh
        source /opt/intel/oneapi/mpi/2021.3.0/env/vars.sh
        # source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV

    - name: print config log
      if: ${{ failure() }}
      run: cat build/CMakeFiles/CMakeConfigureLog.yaml

    - name: CMake build
      run: |
        export FC=ifx
        export CC=icx
        export CXX=icpx
        cmake -S . -B build -DCMAKE_BUILD_TYPE=${{matrix.optimization-type}} -DSEMBA_FDTD_ENABLE_MPI=${{matrix.mpi-build}} -DSEMBA_FDTD_ENABLE_HDF=YES
        cmake --build build -j
        
    - name: Run fdtd unit tests
      timeout-minutes: 60
      run: |
        build/bin/fdtd_tests

    - name: Install python wrapper requirements
      run: |
        python -m pip install -r requirements.txt

    - name: Run wrapper tests
      timeout-minutes: 60
      run: |
        python -m pytest test    
        
    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: sh -c .github/workflows/oneapi_cache_exclude_linux.sh
